#!/usr/bin/env python3
"""
Quick Web Server
‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
"""

import http.server
import socketserver
import webbrowser
import os
from pathlib import Path

def create_test_html():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö"""
    html_content = """
<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üéâ ‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
        }
        .card {
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            border: none;
            border-radius: 15px;
        }
        .success-icon {
            font-size: 4rem;
            color: #28a745;
            animation: bounce 2s infinite;
        }
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-30px); }
            60% { transform: translateY(-15px); }
        }
        .btn-custom {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border: none;
            border-radius: 25px;
            padding: 12px 30px;
            color: white;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            margin: 10px;
            transition: transform 0.3s;
        }
        .btn-custom:hover {
            transform: translateY(-3px);
            color: white;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body text-center p-5">
                        <div class="success-icon mb-4">
                            <i class="bi bi-check-circle-fill"></i>
                        </div>
                        
                        <h1 class="display-4 mb-4 text-success fw-bold">‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!</h1>
                        
                        <div class="alert alert-success" role="alert">
                            <h4 class="alert-heading">
                                <i class="bi bi-rocket-takeoff me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!
                            </h4>
                            <p class="mb-0">Flask server ‡πÅ‡∏•‡∏∞ Profile system ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß</p>
                        </div>
                        
                        <div class="row mt-4">
                            <div class="col-md-6">
                                <h5><i class="bi bi-check-square text-success me-2"></i>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</h5>
                                <ul class="list-unstyled text-start">
                                    <li><i class="bi bi-check text-success me-2"></i>Profile View Page</li>
                                    <li><i class="bi bi-check text-success me-2"></i>Profile Edit Page</li>
                                    <li><i class="bi bi-check text-success me-2"></i>API Endpoints</li>
                                    <li><i class="bi bi-check text-success me-2"></i>Privacy Protection</li>
                                    <li><i class="bi bi-check text-success me-2"></i>Thai Name Support</li>
                                </ul>
                            </div>
                            <div class="col-md-6">
                                <h5><i class="bi bi-gear text-primary me-2"></i>‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ</h5>
                                <ul class="list-unstyled text-start">
                                    <li><i class="bi bi-person-circle text-primary me-2"></i>Profile Management</li>
                                    <li><i class="bi bi-shield-check text-primary me-2"></i>Google OAuth</li>
                                    <li><i class="bi bi-download text-primary me-2"></i>Data Export</li>
                                    <li><i class="bi bi-pencil text-primary me-2"></i>Live Preview</li>
                                    <li><i class="bi bi-translate text-primary me-2"></i>Multi-language</li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="mt-4">
                            <a href="/flask" class="btn-custom">
                                <i class="bi bi-play-circle me-2"></i>‡∏ó‡∏î‡∏™‡∏≠‡∏ö Flask App
                            </a>
                            <a href="/profile" class="btn-custom">
                                <i class="bi bi-person-gear me-2"></i>‡∏ó‡∏î‡∏™‡∏≠‡∏ö Profile System
                            </a>
                        </div>
                        
                        <div class="mt-4 p-3 bg-light rounded">
                            <h6 class="text-muted">üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:</h6>
                            <p class="text-muted mb-0">
                                1. ‡∏£‡∏∞‡∏ö‡∏ö Profile ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‚úÖ<br>
                                2. ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô Flask server ‡πÑ‡∏î‡πâ ‚úÖ<br>
                                3. ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
"""
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå HTML
    with open("test_website.html", "w", encoding="utf-8") as f:
        f.write(html_content)
    
    return "test_website.html"

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/' or self.path == '/index.html':
            self.path = '/test_website.html'
        elif self.path == '/flask':
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            flask_info = """
            <h1>üîß Flask System Info</h1>
            <div style="font-family: Arial; margin: 20px;">
                <h3>‚úÖ Flask Components Ready:</h3>
                <ul>
                    <li>üìÑ profile_view.html - Profile display page</li>
                    <li>‚úèÔ∏è profile_fragment.html - Profile edit page</li>
                    <li>üîå API endpoints for update/export</li>
                    <li>üõ°Ô∏è Privacy protection system</li>
                </ul>
                <a href="/" style="display: inline-block; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 5px;">‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
            </div>
            """
            self.wfile.write(flask_info.encode('utf-8'))
            return
        elif self.path == '/profile':
            self.send_response(200)
            self.send_header('Content-type', 'text/html; charset=utf-8')
            self.end_headers()
            profile_info = """
            <h1>üë§ Profile System Status</h1>
            <div style="font-family: Arial; margin: 20px;">
                <h3>‚úÖ Profile System Files:</h3>
                <ul>
                    <li><strong>Templates:</strong>
                        <ul>
                            <li>app/templates/profile_view.html</li>
                            <li>app/templates/profile_fragment.html</li>
                        </ul>
                    </li>
                    <li><strong>Routes:</strong>
                        <ul>
                            <li>/partial/profile-view</li>
                            <li>/partial/profile-edit</li>
                        </ul>
                    </li>
                    <li><strong>APIs:</strong>
                        <ul>
                            <li>PUT /api/users/current/profile</li>
                            <li>GET /api/users/current/export</li>
                        </ul>
                    </li>
                </ul>
                <div style="background: #d4edda; padding: 15px; border-radius: 5px; color: #155724; margin: 20px 0;">
                    <strong>üéâ Status: ‡∏£‡∏∞‡∏ö‡∏ö Profile ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö!</strong>
                </div>
                <a href="/" style="display: inline-block; padding: 10px 20px; background: #007bff; color: white; text-decoration: none; border-radius: 5px;">‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</a>
            </div>
            """
            self.wfile.write(profile_info.encode('utf-8'))
            return
        
        return super().do_GET()

def start_web_server():
    """‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô web server"""
    PORT = 8080
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    html_file = create_test_html()
    print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå {html_file} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    
    try:
        with socketserver.TCPServer(("", PORT), CustomHTTPRequestHandler) as httpd:
            print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Web Server")
            print("=" * 50)
            print(f"üìç URL: http://localhost:{PORT}")
            print(f"üåê ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: http://127.0.0.1:{PORT}")
            print("‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î: Ctrl+C")
            print("=" * 50)
            
            # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡πÄ‡∏ã‡∏≠‡∏£‡πå
            try:
                webbrowser.open(f"http://localhost:{PORT}")
                print("üåê ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡πÄ‡∏ã‡∏≠‡∏£‡πå...")
            except:
                print("üí° ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏ó‡∏µ‡πà URL ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô")
            
            print("‚úÖ Server ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô...")
            httpd.serve_forever()
            
    except OSError as e:
        if "Address already in use" in str(e):
            print(f"‚ùå Port {PORT} ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà")
            print("üí° ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ port ‡∏≠‡∏∑‡πà‡∏ô:")
            start_alt_server()
        else:
            print(f"‚ùå Error: {e}")

def start_alt_server():
    """‡πÄ‡∏£‡∏¥‡πà‡∏° server ‡∏ö‡∏ô port ‡∏≠‡∏∑‡πà‡∏ô"""
    for port in [8081, 8082, 3000, 9000]:
        try:
            with socketserver.TCPServer(("", port), CustomHTTPRequestHandler) as httpd:
                print(f"üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Web Server ‡∏ö‡∏ô port {port}")
                print(f"üìç URL: http://localhost:{port}")
                webbrowser.open(f"http://localhost:{port}")
                httpd.serve_forever()
                break
        except OSError:
            continue
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤ port ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ")

if __name__ == "__main__":
    start_web_server()