// app/static/js/track.js

(function() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ track ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!document.getElementById('total-pomodoros')) {
        return;
    }
    console.log('‚úÖ Track page script is running!');

    /**
     * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
     */
    async function loadTrackDataAndRender() {
        console.log('üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• track...');
        try {
            const response = await fetch('/api/track/statistics');
            const data = await response.json();

            if (data.success) {
                console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                updateTodayProgress(data.today);
                updateTotalStatistics(data.total);
                // ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü
                renderWeeklyChart(data.weekly);
                renderTimeDistribution();
            } else {
                console.error('‚ùå API Error:', data.error);
            }
        } catch (error) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠:', error);
        }
    }

    /**
     * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô "Today's Progress"
     */
    function updateTodayProgress(todayData) {
        console.log('üìä ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Today\'s Progress...');
        updateProgressBar('pomodoros', todayData.pomodoros.current, todayData.pomodoros.goal);
        updateProgressBar('study-time', todayData.study_time.current, todayData.study_time.goal);
        updateProgressBar('lessons', todayData.lessons.current, todayData.lessons.goal);
        updateProgressBar('notes', todayData.notes.current, todayData.notes.goal);
    }

    /**
     * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤ (Progress Bar) ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
     */
    function updateProgressBar(id, current, goal) {
        const valueElement = document.getElementById(`today-${id}-value`);
        const barElement = document.getElementById(`today-${id}-bar`);
        if (valueElement && barElement) {
            const percentage = goal > 0 ? (current / goal) * 100 : 0;
            valueElement.textContent = `${current}/${goal}`;
            if (id === 'study-time') {
                valueElement.textContent += ' min';
            }
            barElement.style.width = `${percentage}%`;
        }
    }

    /**
     * ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô "Statistics Summary"
     */
    function updateTotalStatistics(totalData) {
        console.log('üìà ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Statistics Summary...');
        document.getElementById('total-pomodoros').textContent = totalData.pomodoros;
        const hours = Math.floor(totalData.study_time / 60);
        document.getElementById('total-study-time').textContent = `${hours}h`;
        document.getElementById('total-lessons').textContent = totalData.lessons;
        document.getElementById('total-notes').textContent = totalData.notes;
    }

    /**
     * ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
     */
    function renderWeeklyChart(weeklyData) {
        const ctx = document.getElementById('progress-chart');
        if (!ctx) return;

        if (window.weeklyChart) {
            window.weeklyChart.destroy();
        }

        // TODO: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà mock data ‡∏î‡πâ‡∏ß‡∏¢ weeklyData ‡∏à‡∏≤‡∏Å API
        const mockPomodoroData = [5, 7, 6, 8, 5, 3, 6];
        const mockNoteData = [3, 5, 4, 6, 3, 2, 4];

        window.weeklyChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['‡∏à', '‡∏≠', '‡∏û', '‡∏û‡∏§', '‡∏®', '‡∏™', '‡∏≠‡∏≤'],
                datasets: [{
                    label: 'Pomodoros',
                    data: mockPomodoroData, // ‡πÉ‡∏ä‡πâ mock data ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }, {
                    label: 'Notes',
                    data: mockNoteData, // ‡πÉ‡∏ä‡πâ mock data ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô
                    borderColor: 'rgb(255, 99, 132)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: false }
                }
            }
        });
        console.log('üìà ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡πÄ‡∏™‡∏£‡πá‡∏à');
    }

    /**
     * ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡πÄ‡∏ß‡∏•‡∏≤
     */
    function renderTimeDistribution() {
        const ctx = document.getElementById('time-chart');
        if (!ctx) return;

        if (window.timeChart) {
            window.timeChart.destroy();
        }

        window.timeChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Study', 'Break', 'Note Taking'],
                datasets: [{
                    label: 'Time Distribution',
                    data: [120, 30, 45], // mock data
                    backgroundColor: [
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)',
                        'rgb(255, 99, 132)'
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: { legend: { position: 'bottom' } }
            }
        });
        console.log('üìä ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à');
    }

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    loadTrackDataAndRender();

})();