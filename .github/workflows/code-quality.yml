name: 🔍 Code Quality & Security

on:
  push:
    branches: [ main, dev/web ]
  pull_request:
    branches: [ main ]
  workflow_call:
    outputs:
      quality-status:
        description: "Code quality check status"
        value: ${{ jobs.quality-check.outputs.status }}

jobs:
  quality-check:
    name: 🔍 Code Quality & Security Analysis
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.quality-status.outputs.status }}
      
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-quality-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-quality-
          
    - name: 📥 Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 bandit safety
        
    - name: 🎨 Code Formatting Check
      run: |
        echo "🎨 Checking code formatting with Black..."
        black --check --diff app/ tests/ || {
          echo "❌ Code formatting issues found"
          echo "Run 'black app/ tests/' to fix formatting"
          exit 1
        }
        echo "✅ Code formatting is correct"
        
    - name: 📦 Import Sorting Check
      run: |
        echo "📦 Checking import sorting with isort..."
        isort --check-only --diff app/ tests/ || {
          echo "❌ Import sorting issues found"
          echo "Run 'isort app/ tests/' to fix imports"
          exit 1
        }
        echo "✅ Import sorting is correct"
        
    - name: 🔍 Linting Check
      run: |
        echo "🔍 Running linting with Flake8..."
        flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics || {
          echo "❌ Critical linting issues found"
          exit 1
        }
        flake8 app/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        echo "✅ Linting checks passed"
        
    - name: 🔒 Security Analysis
      run: |
        echo "🔒 Running security analysis with Bandit..."
        bandit -r app/ -f txt || {
          echo "⚠️ Security issues found - check report"
        }
        echo "✅ Security analysis completed"
        
    - name: 🛡️ Dependency Security Check
      run: |
        echo "🛡️ Checking dependency vulnerabilities with Safety..."
        safety check || {
          echo "⚠️ Dependency vulnerabilities found - check report"
        }
        echo "✅ Dependency security check completed"
        
    - name: ✅ Quality Status
      id: quality-status
      run: |
        echo "✅ All code quality checks passed!"
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: 📊 Upload Quality Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quality-reports
        path: |
          bandit-report.txt
          safety-report.txt
