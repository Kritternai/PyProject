name: Code Coverage

on:
  push:
    branches: [ main, dev/web ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # ============================================
  # CODE COVERAGE
  # ============================================
  coverage:
    name: Code Coverage Report
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for coverage reports
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-html
        pip install -r requirements.txt
        
    - name: Set up test environment
      run: |
        export FLASK_ENV=testing
        export DATABASE_URL=sqlite:///test.db
        export FLASK_SECRET_KEY=coverage_test_secret_key
        
    - name: Create test database
      run: |
        python database/setup_database.py
        
    - name: Run tests with coverage
      run: |
        pytest \
          --cov=app \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=70 \
          --junitxml=pytest-report.xml \
          --html=pytest-report.html \
          --self-contained-html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/
          pytest-report.html
          pytest-report.xml
          
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          // Read coverage report
          const coverageXml = fs.readFileSync('coverage.xml', 'utf8');
          const coverageMatch = coverageXml.match(/line-rate="([^"]+)"/);
          const coveragePercent = coverageMatch ? Math.round(parseFloat(coverageMatch[1]) * 100) : 'Unknown';
          
          // Read HTML coverage report for file details
          let fileCoverage = '';
          try {
            const htmlReport = fs.readFileSync('htmlcov/index.html', 'utf8');
            const fileMatches = htmlReport.match(/<td class="text-right">(\d+\.?\d*)%<\/td>/g);
            if (fileMatches) {
              fileCoverage = '\n\n**File Coverage:**\n' + fileMatches.slice(0, 10).join('\n');
            }
          } catch (error) {
            console.log('Could not read HTML coverage report');
          }
          
          const comment = `## 📊 Code Coverage Report
          
          **Overall Coverage:** ${coveragePercent}%
          
          ${fileCoverage}
          
          📈 View detailed coverage report in the [workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          
          ---
          *Coverage report generated by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # ============================================
  # COVERAGE TREND
  # ============================================
  coverage-trend:
    name: Coverage Trend Analysis
    runs-on: ubuntu-latest
    needs: coverage
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt
        
    - name: Get previous coverage
      run: |
        # Get coverage from previous commit
        git checkout HEAD~1
        export FLASK_ENV=testing
        export DATABASE_URL=sqlite:///test.db
        export FLASK_SECRET_KEY=coverage_test_secret_key
        
        python database/setup_database.py
        pytest --cov=app --cov-report=term-missing --quiet > previous_coverage.txt || true
        
        # Get current coverage
        git checkout HEAD
        export FLASK_ENV=testing
        export DATABASE_URL=sqlite:///test.db
        export FLASK_SECRET_KEY=coverage_test_secret_key
        
        python database/setup_database.py
        pytest --cov=app --cov-report=term-missing --quiet > current_coverage.txt || true
        
    - name: Analyze coverage trend
      run: |
        echo "📈 Coverage Trend Analysis"
        echo "========================="
        
        if [ -f previous_coverage.txt ] && [ -f current_coverage.txt ]; then
          PREV_COVERAGE=$(grep "TOTAL" previous_coverage.txt | awk '{print $4}' | sed 's/%//' || echo "0")
          CURR_COVERAGE=$(grep "TOTAL" current_coverage.txt | awk '{print $4}' | sed 's/%//' || echo "0")
          
          echo "Previous coverage: ${PREV_COVERAGE}%"
          echo "Current coverage: ${CURR_COVERAGE}%"
          
          if (( $(echo "$CURR_COVERAGE > $PREV_COVERAGE" | bc -l) )); then
            echo "✅ Coverage increased!"
          elif (( $(echo "$CURR_COVERAGE < $PREV_COVERAGE" | bc -l) )); then
            echo "⚠️  Coverage decreased!"
          else
            echo "➡️  Coverage unchanged"
          fi
        else
          echo "ℹ️  Could not compare with previous coverage"
        fi
